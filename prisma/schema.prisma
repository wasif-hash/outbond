// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}



model User {
  id        String    @id @default(cuid())
  email     String    @unique
  role      String    @default("user")
  password  String
  isInvited Boolean   @default(false)
  invitedAt DateTime?
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  googleTokens GoogleOAuthToken[]
  googleSheets GoogleSheet[]

  @@map("users")
}

model GoogleOAuthToken {
  id           String   @id @default(cuid())
  userId       String
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  accessToken  String
  refreshToken String
  expiresAt    DateTime
  scope        String
  tokenType    String
  createdAt    DateTime @default(now())
  updatedAt    DateTime @updatedAt

  @@unique([userId]) // 1 Google account per user (simplest)
  @@index([userId])
}

model GoogleSheet {
  id     String @id @default(cuid())
  userId String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  spreadsheetId  String // 1BxiMV...
  spreadsheetUrl String
  title          String
  sheetId        Int? // gid
  sheetTitle     String?
  range          String? // e.g. Leads!A1:Z

  lastUsedAt DateTime?
  createdAt  DateTime  @default(now())
  updatedAt  DateTime  @updatedAt

  @@unique([userId, spreadsheetId])
  @@index([userId])
}
